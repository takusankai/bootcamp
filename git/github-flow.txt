["github flow" を理解する 以降、GA Tryoutでは"github flow" を採用して運用する]

5本のブランチを使い分けるgit flowと異なり、github flowはシンプルな考え方である。
デフォルトブランチから各開発機能ごとにfeatureブランチを切るのがgithub flowの基本となる。
feature-xxxやfeature-yyyと命名規則に従ってブランチ名を記述し、github上でのpull requestを経てデフォルトブランチにmargeされていく。

公式ドキュメントより、ブランチ作成→変更→PR→レビュー→PRをマージ→ブランチ削除、の流れとなる。

以下にgithub flowの6つのルールというものが@ITで紹介されていたので引用する。

【ルール1】masterブランチは常にデプロイ可能である
【ルール2】作業用ブランチをmasterから作成する（例：new-oauth2-scopes）
【ルール3】作業用ブランチを定期的にプッシュする
【ルール4】プルリクエストを活用する
【ルール5】プルリクエストが承認されたらmasterへマージする
【ルール6】masterへのマージが完了したら直ちにデプロイを行う



(参考リンク先)
youtube、「イケてるgitのブランチ運用｜git flowとgithub flowとは！？」、https://www.youtube.com/watch?v=0ge7ZJQvYLw&t=20s
@IT、「git-flow、GitHub Flowを開発現場で使い始めるためにこれだけは覚えておこう」、https://atmarkit.itmedia.co.jp/ait/articles/1708/01/news015.html
Github Docs、「GitHub フロー」、https://docs.github.com/ja/get-started/quickstart/github-flow